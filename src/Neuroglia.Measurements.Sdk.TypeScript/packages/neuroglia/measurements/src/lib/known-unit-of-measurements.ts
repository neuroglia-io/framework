import { UnitOfMeasurementType } from './enums';
import { UnitOfMeasurement } from './models';

export const units = {
  capacity: {
    milliliter: new UnitOfMeasurement({ type: UnitOfMeasurementType.Capacity, name: 'Milliliter', symbol: 'ml', ratio: 1000 }),
    centiliter: new UnitOfMeasurement({ type: UnitOfMeasurementType.Capacity, name: 'Centiliter', symbol: 'cl', ratio: 100 }),
    deciliter: new UnitOfMeasurement({ type: UnitOfMeasurementType.Capacity, name: 'Deciliter', symbol: 'dl', ratio: 10 }),
    liter: new UnitOfMeasurement({ type: UnitOfMeasurementType.Capacity, name: 'Liter', symbol: 'l', ratio: 1 }),
    decaliter: new UnitOfMeasurement({ type: UnitOfMeasurementType.Capacity, name: 'Decaliter', symbol: 'dal', ratio: 0.1 }),
    hectoliter: new UnitOfMeasurement({ type: UnitOfMeasurementType.Capacity, name: 'Hectoliter', symbol: 'hl', ratio: 0.01 }),
    kiloliter: new UnitOfMeasurement({ type: UnitOfMeasurementType.Capacity, name: 'Kiloliter', symbol: 'kl', ratio: 0.001 }),

    USFluidDram: new UnitOfMeasurement({ type: UnitOfMeasurementType.Capacity, name: 'Fluid dram', symbol: 'fl dr (US)', ratio: 270.51218161 }),
    USFluidOunce: new UnitOfMeasurement({ type: UnitOfMeasurementType.Capacity, name: 'Fluid ounce', symbol: 'fl oz (US)', ratio: 33.8140227018 }),
    USGill: new UnitOfMeasurement({ type: UnitOfMeasurementType.Capacity, name: 'Gill', symbol: 'gi (US)', ratio: 8.4535056755 }),
    USPint: new UnitOfMeasurement({ type: UnitOfMeasurementType.Capacity, name: 'Pint', symbol: 'pt (US)', ratio: 2.1133764189 }),
    USQuart: new UnitOfMeasurement({ type: UnitOfMeasurementType.Capacity, name: 'Quart', symbol: 'qt (US)', ratio: 1.05668821 }),
    USGallon: new UnitOfMeasurement({ type: UnitOfMeasurementType.Capacity, name: 'Gallon', symbol: 'gal (US)', ratio: 0.2641720524 }),
    USPeck: new UnitOfMeasurement({ type: UnitOfMeasurementType.Capacity, name: 'Peck', symbol: 'pk (US)', ratio: 0.11351037228269 }),
    USBushel: new UnitOfMeasurement({ type: UnitOfMeasurementType.Capacity, name: 'Bushel', symbol: 'bu (US)', ratio: 0.028377593070673 }),
  },

  energy: {
    millicalorie: new UnitOfMeasurement({ type: UnitOfMeasurementType.Energy, name: 'Millicalorie', symbol: 'ml', ratio: 1000 }),
    centicalorie: new UnitOfMeasurement({ type: UnitOfMeasurementType.Energy, name: 'Centicalorie', symbol: 'cl', ratio: 100 }),
    decicalorie: new UnitOfMeasurement({ type: UnitOfMeasurementType.Energy, name: 'Decicalorie', symbol: 'dl', ratio: 10 }),
    calorie: new UnitOfMeasurement({ type: UnitOfMeasurementType.Energy, name: 'Calorie', symbol: 'l', ratio: 1 }),
    decacalorie: new UnitOfMeasurement({ type: UnitOfMeasurementType.Energy, name: 'Decacalorie', symbol: 'dal', ratio: 0.1 }),
    hectocalorie: new UnitOfMeasurement({ type: UnitOfMeasurementType.Energy, name: 'Hectocalorie', symbol: 'hl', ratio: 0.01 }),
    kilocalorie: new UnitOfMeasurement({ type: UnitOfMeasurementType.Energy, name: 'Kilocalorie', symbol: 'kl', ratio: 0.001 }),
    millijoule: new UnitOfMeasurement({ type: UnitOfMeasurementType.Energy, name: 'Millijoule', symbol: 'J', ratio: 4184 }),
    centijoule: new UnitOfMeasurement({ type: UnitOfMeasurementType.Energy, name: 'Centijoule', symbol: 'J', ratio: 418.4 }),
    decijoule: new UnitOfMeasurement({ type: UnitOfMeasurementType.Energy, name: 'Decijoule', symbol: 'J', ratio: 41.84 }),
    joule: new UnitOfMeasurement({ type: UnitOfMeasurementType.Energy, name: 'Joule', symbol: 'J', ratio: 4.184 }),
    decajoule: new UnitOfMeasurement({ type: UnitOfMeasurementType.Energy, name: 'Decajoule', symbol: 'daJ', ratio: 0.4184 }),
    hectojoule: new UnitOfMeasurement({ type: UnitOfMeasurementType.Energy, name: 'Hectojoule', symbol: 'hJ', ratio: 0.04184 }),
    kilojoule: new UnitOfMeasurement({ type: UnitOfMeasurementType.Energy, name: 'Kilojoule', symbol: 'kJ', ratio: 0.004184 }),
  },

  length: {
    millimeter: new UnitOfMeasurement({ type: UnitOfMeasurementType.Length, name: 'Millimeter', symbol: 'mm', ratio: 1000 }),
    centimeter: new UnitOfMeasurement({ type: UnitOfMeasurementType.Length, name: 'Centimeter', symbol: 'cm', ratio: 100 }),
    decimeter: new UnitOfMeasurement({ type: UnitOfMeasurementType.Length, name: 'Decimeter', symbol: 'dm', ratio: 10 }),
    meter: new UnitOfMeasurement({ type: UnitOfMeasurementType.Length, name: 'Meter', symbol: 'm', ratio: 1 }),
    decameter: new UnitOfMeasurement({ type: UnitOfMeasurementType.Length, name: 'Decameter', symbol: 'dam', ratio: 0.1 }),
    hectometer: new UnitOfMeasurement({ type: UnitOfMeasurementType.Length, name: 'Hectometer', symbol: 'hm', ratio: 0.01 }),
    kilometer: new UnitOfMeasurement({ type: UnitOfMeasurementType.Length, name: 'Kilometer', symbol: 'km', ratio: 0.001 }),
    inch: new UnitOfMeasurement({ type: UnitOfMeasurementType.Length, name: 'Inch', symbol: 'in', ratio: 39.3700787402 }),
    foot: new UnitOfMeasurement({ type: UnitOfMeasurementType.Length, name: 'Foot', symbol: 'ft', ratio: 3.28084 }),
    yard: new UnitOfMeasurement({ type: UnitOfMeasurementType.Length, name: 'Yard', symbol: 'yd', ratio: 1.09361 }),
    mile: new UnitOfMeasurement({ type: UnitOfMeasurementType.Length, name: 'Mile', symbol: 'mi', ratio: 0.000621371 }),
  },

  mass: {
    milligram: new UnitOfMeasurement({ type: UnitOfMeasurementType.Mass, name: 'Milligram', symbol: 'mg', ratio: 1000 }),
    centigram: new UnitOfMeasurement({ type: UnitOfMeasurementType.Mass, name: 'Centigram', symbol: 'cg', ratio: 100 }),
    decigram: new UnitOfMeasurement({ type: UnitOfMeasurementType.Mass, name: 'Decigram', symbol: 'dg', ratio: 10 }),
    gram: new UnitOfMeasurement({ type: UnitOfMeasurementType.Mass, name: 'Gram', symbol: 'g', ratio: 1 }),
    decagram: new UnitOfMeasurement({ type: UnitOfMeasurementType.Mass, name: 'Decagram', symbol: 'dag', ratio: 0.1 }),
    hectogram: new UnitOfMeasurement({ type: UnitOfMeasurementType.Mass, name: 'Hectogram', symbol: 'hg', ratio: 0.01 }),
    kilogram: new UnitOfMeasurement({ type: UnitOfMeasurementType.Mass, name: 'Kilogram', symbol: 'kg', ratio: 0.001 }),
    ton: new UnitOfMeasurement({ type: UnitOfMeasurementType.Mass, name: 'Ton', symbol: 't', ratio: 0.000001 }),
    kiloton: new UnitOfMeasurement({ type: UnitOfMeasurementType.Mass, name: 'Kiloton', symbol: 'kt', ratio: 0.000000001 }),
    megaton: new UnitOfMeasurement({ type: UnitOfMeasurementType.Mass, name: 'Megaton', symbol: 'Mt', ratio: 0.000000000001 }),
    grain: new UnitOfMeasurement({ type: UnitOfMeasurementType.Mass, name: 'Grain', symbol: 'gr', ratio: 15.4323583529 }),
    dram: new UnitOfMeasurement({ type: UnitOfMeasurementType.Mass, name: 'Dram', symbol: 'dr', ratio: 0.31746031746031 }),
    ounce: new UnitOfMeasurement({ type: UnitOfMeasurementType.Mass, name: 'Ounce', symbol: 'oz', ratio: 0.03527396195 }),
    pound: new UnitOfMeasurement({ type: UnitOfMeasurementType.Mass, name: 'Pound', symbol: 'lb', ratio: 0.0022046226 }),
    stone: new UnitOfMeasurement({ type: UnitOfMeasurementType.Mass, name: 'Stone', symbol: 'st', ratio: 0.000157473 }),
  },

  surface: {
    squareMillimeter: new UnitOfMeasurement({ type: UnitOfMeasurementType.Surface, name: 'Square millimeter', symbol: 'mm²', ratio: 1000 }),
    squareCentimeter: new UnitOfMeasurement({ type: UnitOfMeasurementType.Surface, name: 'Square centimeter', symbol: 'cm²', ratio: 100 }),
    squareDecimeter: new UnitOfMeasurement({ type: UnitOfMeasurementType.Surface, name: 'Square decimeter', symbol: 'dm²', ratio: 10 }),
    squareMeter: new UnitOfMeasurement({ type: UnitOfMeasurementType.Surface, name: 'Square meter', symbol: 'm²', ratio: 1 }),
    squareDecameter: new UnitOfMeasurement({ type: UnitOfMeasurementType.Surface, name: 'Square decameter', symbol: 'dam²', ratio: 0.1 }),
    squareHectometer: new UnitOfMeasurement({ type: UnitOfMeasurementType.Surface, name: 'Square hectometer', symbol: 'hm²', ratio: 0.01 }),
    squareKilometer: new UnitOfMeasurement({ type: UnitOfMeasurementType.Surface, name: 'Square kilometer', symbol: 'km²', ratio: 0.001 }),
    squareInch: new UnitOfMeasurement({ type: UnitOfMeasurementType.Surface, name: 'Square inch', symbol: 'in²', ratio: 1550.0031 }),
    squareFoot: new UnitOfMeasurement({ type: UnitOfMeasurementType.Surface, name: 'Square foot', symbol: 'ft²', ratio: 10.76391041671 }),
    squareYard: new UnitOfMeasurement({ type: UnitOfMeasurementType.Surface, name: 'Square yard', symbol: 'yd²', ratio: 1.1959900463011 }),
    squareMile: new UnitOfMeasurement({ type: UnitOfMeasurementType.Surface, name: 'Square mile', symbol: 'mi²', ratio: 0.00000038610215855 }),
  },

  temperature: {
    millikelvin: new UnitOfMeasurement({ type: UnitOfMeasurementType.Temperature, name: 'Millikelvin', symbol: 'mK', ratio: 1000 }),
    centikelvin: new UnitOfMeasurement({ type: UnitOfMeasurementType.Temperature, name: 'Centikelvin', symbol: 'cK', ratio: 100 }),
    decikelvin: new UnitOfMeasurement({ type: UnitOfMeasurementType.Temperature, name: 'Decikelvin', symbol: 'dK', ratio: 10 }),
    kelvin: new UnitOfMeasurement({ type: UnitOfMeasurementType.Temperature, name: 'Kelvin', symbol: 'K', ratio: 1 }),
    decakelvin: new UnitOfMeasurement({ type: UnitOfMeasurementType.Temperature, name: 'Decakelvin', symbol: 'daK', ratio: 0.1 }),
    hectokelvin: new UnitOfMeasurement({ type: UnitOfMeasurementType.Temperature, name: 'Hectokelvin', symbol: 'hK', ratio: 0.01 }),
    kilokelvin: new UnitOfMeasurement({ type: UnitOfMeasurementType.Temperature, name: 'Kilokelvin', symbol: 'kK', ratio: 0.001 }),
    degreeCelsius: new UnitOfMeasurement({ type: UnitOfMeasurementType.Temperature, name: 'Degree Celsius', symbol: '°C', ratio: 1 }),
    degreeFahrenheit: new UnitOfMeasurement({ type: UnitOfMeasurementType.Temperature, name: 'Degree Fahrenheit', symbol: '°F', ratio: 1 }),
  },

  unit: {
    unit: new UnitOfMeasurement({ type: UnitOfMeasurementType.Unit, name: 'Unit', symbol: 'u', ratio: 1 }),
    pair: new UnitOfMeasurement({ type: UnitOfMeasurementType.Unit, name: 'Pair', symbol: 'pr', ratio: 0.5 }),
    halfDozen: new UnitOfMeasurement({ type: UnitOfMeasurementType.Unit, name: 'Half dozen', symbol: 'doz', ratio: 1/6 }),
    dozen: new UnitOfMeasurement({ type: UnitOfMeasurementType.Unit, name: 'Half dozen', symbol: 'hdoz', ratio: 1/12 }),
  },

  volume: {
    cubicMillimeter: new UnitOfMeasurement({ type: UnitOfMeasurementType.Volume, name: 'Cubic millimeter', symbol: 'mm³', ratio: 1000 }),
    cubicCentimeter: new UnitOfMeasurement({ type: UnitOfMeasurementType.Volume, name: 'Cubic centimeter', symbol: 'cm³', ratio: 100 }),
    cubicDecimeter: new UnitOfMeasurement({ type: UnitOfMeasurementType.Volume, name: 'Cubic decimeter', symbol: 'dm³', ratio: 10 }),
    cubicMeter: new UnitOfMeasurement({ type: UnitOfMeasurementType.Volume, name: 'Cubic meter', symbol: 'm³', ratio: 1 }),
    cubicDecameter: new UnitOfMeasurement({ type: UnitOfMeasurementType.Volume, name: 'Cubic decameter', symbol: 'dam³', ratio: 0.1 }),
    cubicHectometer: new UnitOfMeasurement({ type: UnitOfMeasurementType.Volume, name: 'Cubic hectometer', symbol: 'hm³', ratio: 0.01 }),
    cubicKilometer: new UnitOfMeasurement({ type: UnitOfMeasurementType.Volume, name: 'Cubic kilometer', symbol: 'km³', ratio: 0.001 }),
    cubicInch: new UnitOfMeasurement({ type: UnitOfMeasurementType.Volume, name: 'Cubic inch', symbol: 'in³', ratio: 61023.7441 }),
    cubicFoot: new UnitOfMeasurement({ type: UnitOfMeasurementType.Volume, name: 'Cubic foot', symbol: 'ft³', ratio: 35.314667 }),
    cubicYard: new UnitOfMeasurement({ type: UnitOfMeasurementType.Volume, name: 'Cubic yard', symbol: 'yd³', ratio: 1.307951 }),
    cubicMile: new UnitOfMeasurement({ type: UnitOfMeasurementType.Volume, name: 'Cubic mile', symbol: 'mi³', ratio: 2.3991274853161 }),
    fluidOunce: new UnitOfMeasurement({ type: UnitOfMeasurementType.Volume, name: 'Fluid ounce', symbol: 'fl oz', ratio: 33814.022702 }),
    imperialGallon: new UnitOfMeasurement({ type: UnitOfMeasurementType.Volume, name: 'Imperial gallon', symbol: 'imp gal', ratio: 219.96924829909 }),
    USGallon: new UnitOfMeasurement({ type: UnitOfMeasurementType.Volume, name: 'U.S. gallon', symbol: 'gal', ratio: 264.172052 }),
  }
};
