//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Neuroglia.Data.Guards.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class GuardExceptionMessages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal GuardExceptionMessages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Neuroglia.Data.Guards.Properties.GuardExceptionMessages", typeof(GuardExceptionMessages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value must be a date and time before &apos;{before}&apos;.
        /// </summary>
        public static string when_after {
            get {
                return ResourceManager.GetString("when_after", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value must be a date and time after &apos;{after}&apos;.
        /// </summary>
        public static string when_before {
            get {
                return ResourceManager.GetString("when_before", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value must not contain &apos;{item}&apos;.
        /// </summary>
        public static string when_contains {
            get {
                return ResourceManager.GetString("when_contains", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value must not contain exactly &apos;{count}&apos; items.
        /// </summary>
        public static string when_count_equals {
            get {
                return ResourceManager.GetString("when_count_equals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value must contain a maximum of &apos;{maximum}&apos; items.
        /// </summary>
        public static string when_count_higher_than {
            get {
                return ResourceManager.GetString("when_count_higher_than", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value must contain a minimum of &apos;{minimum}&apos; items.
        /// </summary>
        public static string when_count_lower_than {
            get {
                return ResourceManager.GetString("when_count_lower_than", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value must contain exactly &apos;{count}&apos; items.
        /// </summary>
        public static string when_count_not_equals {
            get {
                return ResourceManager.GetString("when_count_not_equals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value must not end with &apos;{suffix}&apos;.
        /// </summary>
        public static string when_ends_with {
            get {
                return ResourceManager.GetString("when_ends_with", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value must not be equal to &apos;{value}&apos;.
        /// </summary>
        public static string when_equals {
            get {
                return ResourceManager.GetString("when_equals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value must not be equivalent to &apos;{value}&apos;.
        /// </summary>
        public static string when_equivalent_to {
            get {
                return ResourceManager.GetString("when_equivalent_to", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified value must be set to &apos;true&apos;.
        /// </summary>
        public static string when_false {
            get {
                return ResourceManager.GetString("when_false", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value must be lower than &apos;{value}&apos;.
        /// </summary>
        public static string when_higher_than {
            get {
                return ResourceManager.GetString("when_higher_than", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value must be higher than &apos;{value}&apos;.
        /// </summary>
        public static string when_lower_than {
            get {
                return ResourceManager.GetString("when_lower_than", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value must not match the pattern &apos;{pattern}&apos;.
        /// </summary>
        public static string when_matches {
            get {
                return ResourceManager.GetString("when_matches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value must not be negative.
        /// </summary>
        public static string when_negative {
            get {
                return ResourceManager.GetString("when_negative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value must contain &apos;{item}&apos;.
        /// </summary>
        public static string when_not_contains {
            get {
                return ResourceManager.GetString("when_not_contains", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value must end with &apos;{suffix}&apos;.
        /// </summary>
        public static string when_not_ends_with {
            get {
                return ResourceManager.GetString("when_not_ends_with", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value must be equal to &apos;{value}&apos;.
        /// </summary>
        public static string when_not_equals {
            get {
                return ResourceManager.GetString("when_not_equals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value must be equivalent to &apos;{value}&apos;.
        /// </summary>
        public static string when_not_equivalent_to {
            get {
                return ResourceManager.GetString("when_not_equivalent_to", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value must match the pattern &apos;{pattern}&apos;.
        /// </summary>
        public static string when_not_matches {
            get {
                return ResourceManager.GetString("when_not_matches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value must be null.
        /// </summary>
        public static string when_not_null {
            get {
                return ResourceManager.GetString("when_not_null", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value must start with &apos;{prefix}&apos;.
        /// </summary>
        public static string when_not_starts_with {
            get {
                return ResourceManager.GetString("when_not_starts_with", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value must fall within a range beginning at &apos;{minimum}&apos; and extending up to &apos;{maximum}&apos;.
        /// </summary>
        public static string when_not_within_range {
            get {
                return ResourceManager.GetString("when_not_within_range", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value is required and cannot be null.
        /// </summary>
        public static string when_null {
            get {
                return ResourceManager.GetString("when_null", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value cannot be null or empty.
        /// </summary>
        public static string when_null_or_empty {
            get {
                return ResourceManager.GetString("when_null_or_empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value must not be null or contain only whitespace characters.
        /// </summary>
        public static string when_null_or_whitespace {
            get {
                return ResourceManager.GetString("when_null_or_whitespace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to find a {type} with the specified {keyName} &apos;{key}&apos;.
        /// </summary>
        public static string when_null_reference {
            get {
                return ResourceManager.GetString("when_null_reference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value must not be positive.
        /// </summary>
        public static string when_positive {
            get {
                return ResourceManager.GetString("when_positive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value must not start with &apos;{prefix}&apos;.
        /// </summary>
        public static string when_starts_with {
            get {
                return ResourceManager.GetString("when_starts_with", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified value must be set to &apos;false&apos;.
        /// </summary>
        public static string when_true {
            get {
                return ResourceManager.GetString("when_true", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value must not fall within a range beginning at &apos;{minimum}&apos; and extending up to &apos;{maximum}&apos;.
        /// </summary>
        public static string when_within_range {
            get {
                return ResourceManager.GetString("when_within_range", resourceCulture);
            }
        }
    }
}
