//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Neuroglia.Data.Infrastructure.ResourceOriented.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class ProblemDescriptions {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ProblemDescriptions() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Neuroglia.Data.Infrastructure.ResourceOriented.Properties.ProblemDescriptions", typeof(ProblemDescriptions).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cluster resources cannot define a namespace.
        /// </summary>
        public static string ClusterResourceCannotDefineNamespace {
            get {
                return ResourceManager.GetString("ClusterResourceCannotDefineNamespace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified value &apos;{resourceName}&apos; is an invalid resource name. Consult the documentation of the naming convention in use for further details..
        /// </summary>
        public static string InvalidResourceName {
            get {
                return ResourceManager.GetString("InvalidResourceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to apply the specified patch to resource &apos;{resource}&apos;: the patch document is invalid and/or includes operations that target properties that do not belong to the &apos;spec&apos; root element..
        /// </summary>
        public static string InvalidResourcePatch {
            get {
                return ResourceManager.GetString("InvalidResourcePatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to apply the specified patch to resource &apos;{resource}&apos;: the patch document is invalid and/or includes operations that target properties that do not belong to the sub resource&apos;s root element..
        /// </summary>
        public static string InvalidSubResourcePatch {
            get {
                return ResourceManager.GetString("InvalidSubResourcePatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Namespaced resource must reference a valid namespace.
        /// </summary>
        public static string NamespacedResourceMutDefineNamespace {
            get {
                return ResourceManager.GetString("NamespacedResourceMutDefineNamespace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to admit operation &apos;{operation}&apos; on the specified resource &apos;{resource}&apos;:\r\n{errors}.
        /// </summary>
        public static string ResourceAdmissionFailed {
            get {
                return ResourceManager.GetString("ResourceAdmissionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified resource &apos;{resource}&apos; already exists.
        /// </summary>
        public static string ResourceAlreadyExists {
            get {
                return ResourceManager.GetString("ResourceAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to convert resource &apos;{resource}&apos; to version &apos;{version}&apos;:\n{errors}.
        /// </summary>
        public static string ResourceConversionFailed {
            get {
                return ResourceManager.GetString("ResourceConversionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to find the specified resource definition &apos;{group}/{version}/{plural}&apos;..
        /// </summary>
        public static string ResourceDefinitionNotFound {
            get {
                return ResourceManager.GetString("ResourceDefinitionNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to find the specified resource &apos;{resource}&apos;..
        /// </summary>
        public static string ResourceNotFound {
            get {
                return ResourceManager.GetString("ResourceNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified patch or update had no effect on resource &apos;{resource}&apos;..
        /// </summary>
        public static string ResourceNotModified {
            get {
                return ResourceManager.GetString("ResourceNotModified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to update the resource &apos;{resource}&apos; due to an optimistic concurrency error: the resource&apos;s target version &apos;{targetVersion}&apos; differs from the actual version &apos;{actualVersion}&apos;.
        /// </summary>
        public static string ResourceOptimisticConcurrencyCheckFailed {
            get {
                return ResourceManager.GetString("ResourceOptimisticConcurrencyCheckFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to validate the resource against schema &apos;{group}/{version}/{plural}&apos;. Please check errors for further details..
        /// </summary>
        public static string ResourceSchemaValidationFailed {
            get {
                return ResourceManager.GetString("ResourceSchemaValidationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to find the storage version of the resource definition &apos;{plural}.{group}&apos;.
        /// </summary>
        public static string ResourceStorageVersionNotFound {
            get {
                return ResourceManager.GetString("ResourceStorageVersionNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to find the specified version &apos;{version}&apos; of the resource definition &apos;{plural}.{group}&apos;.
        /// </summary>
        public static string ResourceVersionNotFound {
            get {
                return ResourceManager.GetString("ResourceVersionNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to replace (sub)resource &apos;{resource}&apos;: the &apos;.metadata.resourceVersion&apos; property is required for optimistic concurrency checks when performing replace operations.
        /// </summary>
        public static string ResourceVersionRequired {
            get {
                return ResourceManager.GetString("ResourceVersionRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified sub resource &apos;{subResource}&apos; is not supported.
        /// </summary>
        public static string UnsupportedSubResource {
            get {
                return ResourceManager.GetString("UnsupportedSubResource", resourceCulture);
            }
        }
    }
}
